// Script para corrigir assuntos duplicados nos templates
import { supabase } from '@/integrations/supabase/client';

export const fixDuplicateSubjects = async () => {
  console.log('=== CORRE√á√ÉO DE ASSUNTOS DUPLICADOS ===');
  console.log('');

  try {
    // 1. Buscar todos os templates ativos
    const { data: templates, error } = await supabase
      .from('email_templates')
      .select('*')
      .eq('ativo', true);

    if (error) {
      console.error('Erro ao buscar templates:', error);
      return;
    }

    if (!templates || templates.length === 0) {
      console.log('‚ùå Nenhum template encontrado');
      return;
    }

    console.log(`Encontrados ${templates.length} templates ativos`);

    // 2. Identificar e corrigir templates com assuntos duplicados
    const templatesParaCorrigir = [];

    for (const template of templates) {
      const assunto = template.assunto.toLowerCase();
      const hasDuplication = assunto.split('seu or√ßamento').length > 2;

      if (hasDuplication) {
        console.log(`\n‚ö†Ô∏è  DUPLICA√á√ÉO ENCONTRADA:`);
        console.log(`   Template: ${template.nome}`);
        console.log(`   Assunto atual: "${template.assunto}"`);

        // Propor corre√ß√£o
        let novoAssunto = template.assunto;

        // Remover duplica√ß√µes comuns
        if (assunto.includes('seu or√ßamento - seu or√ßamento')) {
          novoAssunto = template.assunto.replace(/seu or√ßamento - seu or√ßamento/gi, 'Or√ßamento Comply');
        } else if (assunto.includes('seu or√ßamento seu or√ßamento')) {
          novoAssunto = template.assunto.replace(/seu or√ßamento seu or√ßamento/gi, 'Or√ßamento Comply');
        } else if (assunto.match(/seu or√ßamento.*seu or√ßamento/gi)) {
          // Caso mais gen√©rico - substituir primeira ocorr√™ncia
          novoAssunto = template.assunto.replace(/seu or√ßamento/gi, 'Or√ßamento Comply');
          // Se ainda tem duplica√ß√£o, limpar
          if (novoAssunto.toLowerCase().split('or√ßamento comply').length > 2) {
            novoAssunto = novoAssunto.replace(/or√ßamento comply - /gi, '');
          }
        }

        console.log(`   Assunto proposto: "${novoAssunto}"`);

        templatesParaCorrigir.push({
          id: template.id,
          nome: template.nome,
          assuntoAtual: template.assunto,
          novoAssunto: novoAssunto
        });
      }
    }

    if (templatesParaCorrigir.length === 0) {
      console.log('‚úÖ Nenhum template com duplica√ß√£o encontrado');
      return;
    }

    console.log(`\nüìù ${templatesParaCorrigir.length} template(s) precisam de corre√ß√£o:`);
    templatesParaCorrigir.forEach((t, index) => {
      console.log(`\n${index + 1}. ${t.nome}`);
      console.log(`   De: "${t.assuntoAtual}"`);
      console.log(`   Para: "${t.novoAssunto}"`);
    });

    // 3. Aplicar corre√ß√µes (apenas em ambiente de desenvolvimento)
    if (typeof window !== 'undefined' && window.confirm) {
      const confirmar = window.confirm(
        `Deseja aplicar as corre√ß√µes em ${templatesParaCorrigir.length} template(s)?`
      );

      if (confirmar) {
        console.log('\nüîß Aplicando corre√ß√µes...');

        for (const template of templatesParaCorrigir) {
          try {
            const { error: updateError } = await supabase
              .from('email_templates')
              .update({ assunto: template.novoAssunto })
              .eq('id', template.id);

            if (updateError) {
              console.error(`‚ùå Erro ao atualizar ${template.nome}:`, updateError);
            } else {
              console.log(`‚úÖ ${template.nome} atualizado com sucesso`);
            }
          } catch (error) {
            console.error(`‚ùå Erro ao processar ${template.nome}:`, error);
          }
        }

        console.log('\nüéâ Corre√ß√µes aplicadas!');
      } else {
        console.log('‚ùå Corre√ß√µes canceladas pelo usu√°rio');
      }
    } else {
      console.log('\n‚ö†Ô∏è  Para aplicar as corre√ß√µes, execute: fixDuplicateSubjects() no console do navegador');
    }

  } catch (error) {
    console.error('Erro geral na corre√ß√£o:', error);
  }
};

export const previewSubjectFixes = async () => {
  console.log('=== PREVIEW DAS CORRE√á√ïES ===');
  
  try {
    const { data: templates, error } = await supabase
      .from('email_templates')
      .select('id, nome, assunto')
      .eq('ativo', true);

    if (error) {
      console.error('Erro ao buscar templates:', error);
      return;
    }

    console.log('Simula√ß√£o de corre√ß√µes:');
    
    templates?.forEach(template => {
      const assunto = template.assunto.toLowerCase();
      const hasDuplication = assunto.split('seu or√ßamento').length > 2;

      if (hasDuplication) {
        let novoAssunto = template.assunto;

        // Aplicar mesma l√≥gica de corre√ß√£o
        if (assunto.includes('seu or√ßamento - seu or√ßamento')) {
          novoAssunto = template.assunto.replace(/seu or√ßamento - seu or√ßamento/gi, 'Or√ßamento Comply');
        } else if (assunto.includes('seu or√ßamento seu or√ßamento')) {
          novoAssunto = template.assunto.replace(/seu or√ßamento seu or√ßamento/gi, 'Or√ßamento Comply');
        } else if (assunto.match(/seu or√ßamento.*seu or√ßamento/gi)) {
          novoAssunto = template.assunto.replace(/seu or√ßamento/gi, 'Or√ßamento Comply');
          if (novoAssunto.toLowerCase().split('or√ßamento comply').length > 2) {
            novoAssunto = novoAssunto.replace(/or√ßamento comply - /gi, '');
          }
        }

        console.log(`\nüìß ${template.nome}`);
        console.log(`   Atual: "${template.assunto}"`);
        console.log(`   Novo:  "${novoAssunto}"`);
      }
    });

  } catch (error) {
    console.error('Erro no preview:', error);
  }
};

// Disponibilizar fun√ß√µes globalmente
if (typeof window !== 'undefined') {
  (window as any).fixDuplicateSubjects = fixDuplicateSubjects;
  (window as any).previewSubjectFixes = previewSubjectFixes;
  
  console.log('üîß Fun√ß√µes de corre√ß√£o dispon√≠veis:');
  console.log('- previewSubjectFixes() - Ver preview das corre√ß√µes');
  console.log('- fixDuplicateSubjects() - Aplicar corre√ß√µes');
}